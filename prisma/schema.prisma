// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider      = "prisma-client-js"
  output        = "../node_modules/.prisma/client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DeviceData {
  id        Int      @id @default(autoincrement())
  deviceId  String
  payload   Json
  createdAt DateTime @default(now())
}

model User{
  id String @id @default(uuid())
  name String
  fingerprint  String
  face String
  devices  UserDevice[]
  logs  Log[]
}

model Device {
  id        String   @id @default(uuid())
  name      String
  apiKey    String   @unique
  isActive  Boolean  @default(true)
  user      UserDevice[]
  logs      Log[]
}
model UserDevice {
  userId   String
  deviceId String
  role     Role
  addedAt  DateTime @default(now())
  revokedAt DateTime? @default(dbgenerated("(now() + '24:00:00'::interval)"))
  revoked  Boolean  @default(false)

  user     User   @relation(fields:[userId], references:[id])
  device   Device @relation(fields:[deviceId], references:[id])

  @@id([userId, deviceId])
}
model Log {
  id        String   @id @default(uuid())
  time      DateTime @default(now())
  status    Boolean
  message   String?
  ipAddress String?
  userId    String
  deviceId  String
  user      User     @relation(fields: [userId], references: [id])
  device    Device   @relation(fields: [deviceId], references: [id])
}

enum Role {
  owner
  guest
}